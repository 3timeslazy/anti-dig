package overwrite_test

import (
	"bytes"
	"os"
	"testing"

	dig "github.com/3timeslazy/anti-dig"
	"github.com/3timeslazy/anti-dig/anti"
	rename "github.com/3timeslazy/anti-dig/anti/gorename"
	"github.com/3timeslazy/anti-dig/anti/overwrite/testcases/consumer"
	"github.com/3timeslazy/anti-dig/anti/overwrite/testcases/registry"
	"github.com/stretchr/testify/require"
)

func TestRename(t *testing.T) {
	expectedCode, err := os.ReadFile("expected.txt")
	require.NoError(t, err)
	expectedDiff, err := os.ReadFile("diff.txt")
	require.NoError(t, err)

	actualCode := &bytes.Buffer{}
	actualDiff := &bytes.Buffer{}

	dig.Anti = anti.New(actualCode).Optimise(true).Rename(true)

	rename.Stdout = actualDiff
	rename.Diff = true

	container := dig.New()

	err = registry.Invoke(container, func(c consumer.Consumer) {})
	require.NoError(t, err)

	// Skip the first two lines because they contain randomised filenames
	// generated by gorename. Skipping these two lines simplifies testing
	actualDiff.ReadString('\n')
	actualDiff.ReadString('\n')

	require.Equal(t, string(expectedDiff), actualDiff.String())
	require.Equal(t, string(expectedCode), actualCode.String())
}
